-- Fix for Missing Tables and Schema Issues
-- Run this in your Supabase SQL Editor

-- 1. Create the missing report_attachments table
CREATE TABLE IF NOT EXISTS public.report_attachments (
  id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  report_id integer NOT NULL,
  file_url text NOT NULL,
  file_type character varying CHECK (file_type::text = ANY (ARRAY['image'::character varying, 'video'::character varying, 'document'::character varying]::text[])),
  uploaded_at timestamp with time zone DEFAULT now(),
  CONSTRAINT report_attachments_pkey PRIMARY KEY (id),
  CONSTRAINT report_attachments_report_id_fkey FOREIGN KEY (report_id) REFERENCES public.reports(id) ON DELETE CASCADE
);

-- 2. Create storage bucket for file uploads (if not exists)
INSERT INTO storage.buckets (id, name, public) 
VALUES ('report-attachments', 'report-attachments', true)
ON CONFLICT (id) DO NOTHING;

-- 3. Enable RLS on report_attachments table
ALTER TABLE report_attachments ENABLE ROW LEVEL SECURITY;

-- 4. Create RLS policies for report_attachments
CREATE POLICY "Allow public insert on report_attachments" ON report_attachments
FOR INSERT TO anon
WITH CHECK (true);

CREATE POLICY "Allow public select on report_attachments" ON report_attachments
FOR SELECT TO anon
USING (true);

-- 5. Create storage policies for file uploads
CREATE POLICY "Allow public uploads to report-attachments" ON storage.objects
FOR INSERT TO anon
WITH CHECK (bucket_id = 'report-attachments');

CREATE POLICY "Allow public downloads from report-attachments" ON storage.objects
FOR SELECT TO anon
USING (bucket_id = 'report-attachments');

-- 6. Fix the public_id generation function (if it doesn't work properly)
CREATE OR REPLACE FUNCTION generate_public_id()
RETURNS TRIGGER AS $$
BEGIN
    NEW.public_id := 'RPT-' || lpad(NEW.id::text, 6, '0');
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- 7. Recreate the trigger for public_id generation
DROP TRIGGER IF EXISTS trigger_generate_public_id ON public.reports;
CREATE TRIGGER trigger_generate_public_id
    AFTER INSERT ON public.reports
    FOR EACH ROW
    EXECUTE FUNCTION generate_public_id();

-- 8. Update existing reports to have proper public_id (if needed)
UPDATE public.reports 
SET public_id = 'RPT-' || lpad(id::text, 6, '0')
WHERE public_id IS NULL OR public_id = '';

-- Success message
SELECT 'Schema fixes applied successfully! You can now upload files and create tokens.' as message;
